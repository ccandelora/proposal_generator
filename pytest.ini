[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    edge_cases: Tests for edge cases and error handling
    technical: Tests for technical SEO analysis
    content: Tests for content SEO analysis
    backlinks: Tests for backlink analysis
    integration: Tests for component integration
    crew: Tests for CrewAI functionality
    performance: Tests for performance and resource usage
    async: Tests for asynchronous operations
    memory: Tests for memory management and leaks
    error_handling: Tests for error handling and recovery

log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning:crewai.*
    ignore::ImportWarning

addopts = -v --strict-markers --durations=10 --maxfail=2

# Test execution settings
timeout = 300
asyncio_mode = auto

# Coverage settings
[coverage:run]
branch = True
source = src/proposal_generator/components

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[coverage:html]
directory = coverage_html